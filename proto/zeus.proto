syntax = "proto2";
option cc_generic_services = true;

import "common.proto";

package youtu.zeus;
option go_package = "api/youtu_zeus";


message FeatureConfig{

  optional int32 dimension = 1;
  optional youtu.FeatureType feature_type = 2;
  optional double scale = 3;
  optional int32 feature_idx = 4;
}

// create group
message CreateGroupReq
{
  optional string session_id = 1;
  optional string group_id = 2;
  optional youtu.Platform platform = 3;
  optional int32 capacity = 4;          // 支持更新，在updategroup字段（下版本实现）
  optional int32 dimension = 5 [deprecated = true];
  optional youtu.FeatureType feature_type = 6 [deprecated = true];
  optional FeatureConfig feature_config = 7;
}

message CreateGroupRsp
{
  optional string session_id = 1;
  optional int32 error_code = 2;
  optional string error_msg = 3;
}

enum BitFlag {
  // 0x0
  BITFLAG_INVALID = 0;

  // 0x1 - 0x10
  BITFLAG_GET_GROUP_CONFIG = 1;       // 0x0001：  请求GroupConfig
  BITFLAG_GET_GROUP_SIZE = 2;         // 0x0002：  请求GroupSize
  BITFLAG_GET_GROUP_VERSION = 4;      // 0x0004：  请求GroupVersion
}

// describe group
// get group_size|group_version|group_config for group
message DescribeGroupReq
{
  optional string session_id = 1;
  optional string group_id = 2;       // group_id字段必传
  // 请求类型标志位
  // 通过标志位组合支持单次请求请求GroupConfig、GroupSize、GroupVersion的组合，请求GroupStatus不支持组合
  // 0x0001：  请求GroupConfig
  // 0x0002：  请求GroupSize
  // 0x0004：  请求GroupVersion
  optional BitFlag bitflag = 3;      //支持通过标志位或运算，实现单次请求多个功能
}

message DescribeGroupRsp{
  optional string session_id = 1;
  optional int32 error_code = 2;
  optional string error_msg = 3;
  optional GroupConfig group_config = 4;
  optional int32 group_size = 5;
  optional int64 group_version = 6;
}

message GroupConfig {
    optional string group_id = 1;
    optional string l5_address = 2 [deprecated = true];
    optional uint64 capacity = 3 [deprecated = true];   // deprecated, no use
    optional youtu.Platform platform = 4;
    optional double scale = 5 [deprecated = true];
    optional int32 dimension = 6 [deprecated = true];
    optional int32 current_feature = 7;
    optional int32 current_feature_version = 8 [deprecated = true];
    optional youtu.FeatureType feature_type = 9 [deprecated = true];
    optional uint64 cut_size = 10 [deprecated = true];     // deprecated, no use
    repeated FeatureConfig feature_configs = 11;
    optional bool async_deleting = 12 [deprecated = true];    // async deleting flag, no need
}

// update group
// use to AddFeatureConfig|DeleteFeatureConfig before|after feature_version_update
message UpdateGroupReq {
    enum UpdateGroupType {
      // 添加 feature_idx 配置
      // 需检查 feature_idx 对应的 FeatureConfig 是否存在；
      // 若存在则返回错误ERR_FEATURE_CONFIG_EXIST，需要业务方调用清空后再添加；
      // 添加成功后将current_feature改为2
      ADD_FEATURE_CONFIG = 1;

      // 删除 feature_idx 配置
      // 需检查当前是否 feature_0/1 配置均存在，否则拒绝删除 feature_idx 对应配置
      // 删除成功后将current_feature改为1-feature_idx
      DELETE_FEATURE_CONFIG = 2;
    };
    optional string session_id = 1;
    optional string group_id = 2;
    optional UpdateGroupType update_group_type = 3;
    optional FeatureConfig feature_config = 4;
}

message UpdateGroupRsp {
    optional string session_id = 1;
    optional int32 error_code = 2;
    optional string error_msg = 3;
}

// delete group
message DeleteGroupReq
{
  optional string session_id = 1;
  optional string group_id = 2;
}

message DeleteGroupRsp
{
  optional string session_id = 1;
  optional int32 error_code = 2;
  optional string error_msg = 3;
}

// start feature handles
// remember:   miss_ids is treated as failed
message FeaItem
{
  optional string fea_id = 1;          //must not nil
  optional string entity_id = 2;
  optional bytes  feature_0 = 3;
  optional bytes  feature_1 = 4;
  optional bytes  extend_info = 5;
}

// add features
// force=false: if has fea_id already exists will return ERR_DB_INSERT_DUPLICATE
// force=true: 1.delete fea_items already exist in DB, if fail will return ERR_DELETE_FEA
//             2.insert all request fea_items to DB, if fail it's uncertain whether those fea_ids exists in DB
message AddFeasReq
{
  optional string session_id = 1;
  optional string group_id = 2;
  repeated FeaItem items = 3;
  optional bool force = 4 [default = false];
  optional int32 feature_idx = 5;   // =0/1/2
}

message AddFeasRsp
{
  optional string session_id = 1;
  optional int32  error_code = 2;
  optional string error_msg = 3;
  repeated string fea_ids = 4;            // succeed feature_ids
  repeated string fail_fea_ids = 5;       // failed  feature_ids
  optional int64 group_version = 6;
}

// get features
// limit: request len(fea_ids) < 1000
message GetFeasReq
{
  optional string session_id = 1;
  optional string group_id = 2;
  repeated string fea_ids = 3;
  optional int32 feature_idx = 4; // =0/1/2
}

message GetFeasRsp
{
  optional string session_id = 1;
  optional int32 error_code = 2;
  optional string error_msg = 3;
  repeated FeaItem items = 4;
}

// update features
// limit: request len(items) < 1000
message UpdateFeasReq
{
  optional string session_id = 1;
  optional string group_id = 2;
  repeated FeaItem items = 3;
  optional int32 feature_idx = 4; // value: 0/1/2
}

message UpdateFeasRsp
{
  optional string session_id = 1;
  optional int32 error_code = 2;
  optional string error_msg = 3;
  repeated string fea_ids = 4;     // succeed fea_ids 
  optional int64 group_version = 5;
}

// delete features
// limit: request len(fea_ids) < 1000
message DeleteFeasReq
{
  optional string session_id = 1;
  optional string group_id = 2;
  repeated string fea_ids = 3;
}

message DeleteFeasRsp
{
  optional string session_id = 1;
  optional int32  error_code = 2;
  optional string error_msg = 3;
  repeated string fea_ids = 4;              // succeed fea_ids
  repeated string fail_fea_ids = 5;         // failed fea_ids
  optional int64 group_version = 6;
}

// describe entity
message DescribeEntityReq
{
  optional string session_id = 1;
  optional string group_id = 2;
  optional string entity_id = 3;
  optional int32 feature_idx = 4;     // value: 0/1/2
}

message DescribeEntityRsp
{
  optional string session_id = 1;
  optional int32 error_code = 2;
  optional string error_msg = 3;
  repeated FeaItem items = 4;
}

// update entity
message UpdateEntityReq
{
  optional string session_id = 1;
  optional string group_id = 2;
  repeated string fea_ids = 3;
  optional string entity_id = 4;
}

// return fea_ids whose entity_id updated successfully
// don't include fea_ids which are not existed
message UpdateEntityRsp
{
  optional string session_id = 1;
  optional int32 error_code = 2;
  optional string error_msg = 3;
  repeated string fea_ids = 4;        // succeed fea_ids(not include miss_ids)
  optional int64 group_version = 5;
}

// delete entity
message DeleteEntityReq
{
  optional string session_id = 1;
  optional string group_id = 2;
  optional string entity_id = 3;
}

message DeleteEntityRsp
{
  optional string session_id = 1;
  optional int32  error_code = 2;
  optional string error_msg = 3;
  repeated string fea_ids = 4;       // succeed fea_ids(not include miss_ids)
  optional int64 group_version = 5;
}

// retrieve
message RetrieveReq
{
  optional string session_id = 1;
  repeated string group_ids = 2;
  repeated bytes  features = 3;
  optional uint32 topn = 4;
  optional float  threshold = 5;
  repeated int32 feature_idxs = 6;    // value: 0/1, 和group_ids相同idx对应
  optional int32 need_sort = 7 [default = 1];     // 0 结果非有序 1 结果排序
}

message RetrieveRsp
{
  optional string session_id = 1;
  optional int32  error_code = 2;
  optional string error_msg = 3;
  repeated GroupRetrieveItem group_items = 4;
}

message RetrieveCandidate
{
  optional string fea_id = 1;
  optional string entity_id = 2;
  optional float confidence = 3;
  optional bytes extend_info = 4;
}

message RetrieveItem
{
  repeated RetrieveCandidate result = 1;
}

message GroupRetrieveItem
{
  optional string group_id = 1;
  repeated RetrieveItem items = 2;
  optional int64 group_size = 3; // < 0: invalid; >=0 valid size
  optional int32 feature_idx = 4;
  optional int32 retrieve_timecost_ms = 5;
}