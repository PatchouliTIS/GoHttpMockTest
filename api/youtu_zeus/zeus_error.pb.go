// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.5.0
// source: zeus_error.proto

package youtu_zeus

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error int32

const (
	// ////////////////////////////////////
	// PUBLIC ERROR [-101001, -102000]  //
	// ////////////////////////////////////
	// [-101001, -101100]: param error
	Error_ERR_FEATURE_SIZE         Error = -101003
	Error_ERR_GROUP_ID_EMPTY       Error = -101004
	Error_ERR_ENTITY_ID_EMPTY      Error = -101005
	Error_ERR_FEATURE_EMPTY        Error = -101006
	Error_ERR_TOPN_INVALID         Error = -101007
	Error_ERR_FEATURE_TYPE_INVALID Error = -101008
	Error_ERR_FEATURE_DIM_INVALID  Error = -101009
	Error_ERR_FEATURE_IDX_INVALID  Error = -101010
	Error_ERR_GROUP_ID_TOO_LONG    Error = -101011
	Error_ERR_FEA_ID_TOO_LONG      Error = -101012
	Error_ERR_FEA_ID_EMPTY         Error = -101013
	Error_ERR_ENTITY_ID_TOO_LONG   Error = -101014
	Error_ERR_EXTEND_INFO_TOO_LONG Error = -101015
	Error_ERR_TOPN_TOO_LARGE       Error = -101016
	// ////////////////////////////////////
	// LOGIC ERROR [-102001, -103000]  //
	// ////////////////////////////////////
	// ERR_STORAGE                        = -102002 [deprecated = true];
	Error_ERR_GROUP_PAGES_NUM_EXCEED Error = -102003
	Error_ERR_FEA_ID_NOT_EXISTED     Error = -102004
	Error_ERR_GROUP_SIZE_LIMIT       Error = -102005
	// ERR_PLATFORM                       = -102006 [deprecated = true];
	Error_ERR_PAGE_ID_REPEATED Error = -102007
	// ERR_RETRIEVE_SERVER_HOST           = -102008 [deprecated = true];
	Error_ERR_DB_AGENT_RESULT Error = -102009
	// ERR_NO_ENOUGH_GPU_RESOURCE         = -102010 [deprecated = true];
	Error_ERR_GET_CONFIG_FAILED           Error = -102011
	Error_ERR_GET_CONFIG_NOT_FOUND        Error = -102012
	Error_ERR_SET_CONFIG_FAILED           Error = -102013
	Error_ERR_SET_CONFIG_VERSION_MISMATCH Error = -102014
	Error_ERR_DELETE_CONFIG_FAILED        Error = -102015
	Error_ERR_GROUP_EXISTED               Error = -102016
	Error_ERR_ENTITY_ID_NOT_EXISTED       Error = -102017
	// ERR_INVALID_JSON_STRING            = -102018 [deprecated = true];
	// ERR_JSON_MISSING_FIELD             = -102019 [deprecated = true];
	// ERR_FILE_NOT_EXIST                 = -102020 [deprecated = true];
	// ERR_FACE_NOT_EXISTED               = -102021 [deprecated = true];
	// ERR_ROUTE_L5_CONFIG                = -102022 [deprecated = true];
	Error_ERR_GROUP_NOT_EXISTED Error = -102023
	// ERR_REMOTE_NOT_REACHABLE           = -102024 [deprecated = true];
	// ERR_REMOTE_CALL_FAILED             = -102025 [deprecated = true];
	// ERR_INCORRECT_GROUP_ATTACHMENT     = -102026 [deprecated = true];
	// ERR_MALLOC_FAIL                    = -102027 [deprecated = true];
	// ERR_CUDA_GET_DEVICE_FAIL           = -102028 [deprecated = true];
	// ERR_CUDA_SET_DEVICE_FAIL           = -102029 [deprecated = true];
	// ERR_CUDA_FREE_FAIL                 = -102030 [deprecated = true];
	// ERR_CUDA_MEMCPY_FAIL               = -102031 [deprecated = true];
	// ERR_CUDA_MALLOC_FAIL               = -102032 [deprecated = true];
	// ERR_CUBLAS_CREATE_HANDLE_FAIL      = -102033 [deprecated = true];
	// ERR_CUBLAS_DESTROY_HANDLE_FAIL     = -102034 [deprecated = true];
	// ERR_CUBLAS_CREATE_STREAM_FAIL      = -102035 [deprecated = true];
	// ERR_CUBLAS_GET_VECTOR_FAIL         = -102036 [deprecated = true];
	// ERR_GPU_MEM_BLOCK                  = -102037 [deprecated = true];
	// ERR_NORMALIZE                      = -102038 [deprecated = true];
	Error_ERR_PAGE_NOT_EXISTED Error = -102039
	// ERR_PAGE_FAULT                     = -102040 [deprecated = true];
	// ERR_PAGE_DIRTY                     = -102041 [deprecated = true];
	// ERR_GROUP_FAULT                    = -102042 [deprecated = true];
	// ERR_ROUTE_CACHE_CORRUPT            = -102043 [deprecated = true];
	Error_ERR_ROUTE_NOT_FOUND Error = -102044
	// ERR_ROUTE_ALREADY_EXIST            = -102045 [deprecated = true];
	Error_ERR_REMOTE_NOT_FOUND            Error = -102046
	Error_ERR_ROUTE_HASH_NODE_EXIST       Error = -102047
	Error_ERR_ROUTE_HASH_NODE_NOT_EXIST   Error = -102048
	Error_ERR_ROUTE_HASH_WORKER_EXIST     Error = -102049
	Error_ERR_ROUTE_HASH_WORKER_NOT_EXIST Error = -102050
	Error_ERR_ROUTE_HASH_NODE_NOT_EMPTY   Error = -102051
	Error_ERR_GROUP_EMPTY                 Error = -102052
	Error_ERR_PAGE_SYNC_CONFLICT          Error = -102053
	Error_ERR_PAGE_SYNC_DISORDER          Error = -102054
	// ERR_PAGE_VERSION_CONFLICT          = -102055 [deprecated = true];
	// ERR_SYNC_CONFIG_FAIL               = -102056 [deprecated = true];
	Error_ERR_DB_INSERT_DUPLICATE  Error = -102057
	Error_ERR_GET_DISTRIBUTED_LOCK Error = -102058
	Error_ERR_GROUP_FULL           Error = -102059
	// ERR_GROUP_ID_LENGTH_EXCEED         = -102060 [deprecated = true];
	// ERR_FEA_ID_EMPTY                   = -102061 [deprecated = true];
	// ERR_FEA_ID_LENGTH_EXCEED           = -102062 [deprecated = true];
	Error_ERR_FREE_PAGE_SIZE Error = -102063
	// ERR_CONCURRENCE_EXCEED             = -102064 [deprecated = true];
	// ERR_ENTITY_ID_LENGTH_EXCEED        = -102065 [deprecated = true];
	// ERR_EXTEND_INFO_LENGTH_EXCEED      = -102066 [deprecated = true];
	Error_ERR_CONFIG_FEATURE_SIZE  Error = -102067
	Error_ERR_RAPID1VN_GALLERY_ADD Error = -102068
	// ERR_RAPID1VN_GALLERY_NOT_EXIST     = -102069 [deprecated = true];
	// ERR_RAPID1VN_GALLERY_UID_NOT_FOUND = -102070 [deprecated = true];
	Error_ERR_RAPID1VN_GALLERY_UPDATE Error = -102071
	Error_ERR_RAPID1VN_GALLERY_QUERY  Error = -102072
	// ERR_RAPID1VN_PROBE_NOT_EXIST       = -102073 [deprecated = true];
	// ERR_RAPID1VN_DELETE                = -102074 [deprecated = true];
	// ERR_RAPID1VN_INIT                  = -102075 [deprecated = true];
	// ERR_RAPID1VN_QUERY                 = -102076 [deprecated = true];
	Error_ERR_DELETE_FEA Error = -102077
	// ERR_RAPID1VN_GALLERY_REPLACE       = -102078 [deprecated = true];
	Error_ERR_FEATURE_CONFIG_EXIST     Error = -102079
	Error_ERR_FEATURE_CONFIG_NOT_EXIST Error = -102080
	Error_ERR_SYNC_SEARCHER_FAIL       Error = -102081
	// ERR_CUR_FEA_NOT_MATCH              = -102082 [deprecated = true];
	// ERR_WRONG_FEATURE_IDX              = -102083 [deprecated = true];
	Error_ERR_FEATURE_IDX_NOT_CACHED Error = -102084
	// ERR_CREATE_GALLERY_WRAPPER_ERR     = -102085 [deprecated = true];
	Error_ERR_GET_GROUP_CONF_FAIL Error = -102086
	// ERR_CHECK_FEATURE_CONF_FAIL        = -102087 [deprecated = true];
	Error_ERR_PAGE_SYNC_FULL Error = -102088
	// ERR_L5_FORMAT_INVALID              = -102089 [deprecated = true];
	// ERR_L5_GET_RT_FAIL                 = -102090 [deprecated = true];
	Error_ERR_GET_PLAIN_ROUTER_FAIL Error = -102091
	Error_ERR_ADD_JOB               Error = -102092
	Error_ERR_GROUP_ASYNC_DELETING  Error = -102093
	Error_ERR_GROUP_PACK_INVALID    Error = -102094
	Error_ERR_ADD_PAGE_TO_PACK      Error = -102095
	// ERR_GET_FEAS_FROM_DB_FAIL          = -102100 [deprecated = true];
	// ERR_REBUILD_PAGE_FAIL              = -102101 [deprecated = true];
	// ERR_WARM_UP_FAIL                   = -102102 [deprecated = true];
	Error_ERR_UPDATE_VERSION_FAIL         Error = -102103
	Error_ERR_RAPID1VN_GALLERY_INIT       Error = -102104
	Error_ERR_RAPID1VN_GALLERY_DELETE     Error = -102105
	Error_ERR_RAPID1VN_GALLERY_GET        Error = -102106
	Error_ERR_GROUP_VERSION_SYNC_DISORDER Error = -102107
	Error_ERR_GROUP_VERSION_NOT_EXIST     Error = -102108
	Error_ERR_PAGE_DIFF_OVER_TOLERANCE    Error = -102109
	Error_ERR_ROUTE_INVALID               Error = -102110
	// leveldb
	Error_ERR_LEVELDB_PUT_FAIL Error = -102111
	Error_ERR_LEVELDB_GET_FAIL Error = -102112
	// mercury
	Error_ERR_GPU_MEMORY_MANAGER_INIT_FAIL Error = -102113
	Error_ERR_NO_ENOUGH_MEM_CAPACITY       Error = -102114
)

// Enum value maps for Error.
var (
	Error_name = map[int32]string{
		-101003: "ERR_FEATURE_SIZE",
		-101004: "ERR_GROUP_ID_EMPTY",
		-101005: "ERR_ENTITY_ID_EMPTY",
		-101006: "ERR_FEATURE_EMPTY",
		-101007: "ERR_TOPN_INVALID",
		-101008: "ERR_FEATURE_TYPE_INVALID",
		-101009: "ERR_FEATURE_DIM_INVALID",
		-101010: "ERR_FEATURE_IDX_INVALID",
		-101011: "ERR_GROUP_ID_TOO_LONG",
		-101012: "ERR_FEA_ID_TOO_LONG",
		-101013: "ERR_FEA_ID_EMPTY",
		-101014: "ERR_ENTITY_ID_TOO_LONG",
		-101015: "ERR_EXTEND_INFO_TOO_LONG",
		-101016: "ERR_TOPN_TOO_LARGE",
		-102003: "ERR_GROUP_PAGES_NUM_EXCEED",
		-102004: "ERR_FEA_ID_NOT_EXISTED",
		-102005: "ERR_GROUP_SIZE_LIMIT",
		-102007: "ERR_PAGE_ID_REPEATED",
		-102009: "ERR_DB_AGENT_RESULT",
		-102011: "ERR_GET_CONFIG_FAILED",
		-102012: "ERR_GET_CONFIG_NOT_FOUND",
		-102013: "ERR_SET_CONFIG_FAILED",
		-102014: "ERR_SET_CONFIG_VERSION_MISMATCH",
		-102015: "ERR_DELETE_CONFIG_FAILED",
		-102016: "ERR_GROUP_EXISTED",
		-102017: "ERR_ENTITY_ID_NOT_EXISTED",
		-102023: "ERR_GROUP_NOT_EXISTED",
		-102039: "ERR_PAGE_NOT_EXISTED",
		-102044: "ERR_ROUTE_NOT_FOUND",
		-102046: "ERR_REMOTE_NOT_FOUND",
		-102047: "ERR_ROUTE_HASH_NODE_EXIST",
		-102048: "ERR_ROUTE_HASH_NODE_NOT_EXIST",
		-102049: "ERR_ROUTE_HASH_WORKER_EXIST",
		-102050: "ERR_ROUTE_HASH_WORKER_NOT_EXIST",
		-102051: "ERR_ROUTE_HASH_NODE_NOT_EMPTY",
		-102052: "ERR_GROUP_EMPTY",
		-102053: "ERR_PAGE_SYNC_CONFLICT",
		-102054: "ERR_PAGE_SYNC_DISORDER",
		-102057: "ERR_DB_INSERT_DUPLICATE",
		-102058: "ERR_GET_DISTRIBUTED_LOCK",
		-102059: "ERR_GROUP_FULL",
		-102063: "ERR_FREE_PAGE_SIZE",
		-102067: "ERR_CONFIG_FEATURE_SIZE",
		-102068: "ERR_RAPID1VN_GALLERY_ADD",
		-102071: "ERR_RAPID1VN_GALLERY_UPDATE",
		-102072: "ERR_RAPID1VN_GALLERY_QUERY",
		-102077: "ERR_DELETE_FEA",
		-102079: "ERR_FEATURE_CONFIG_EXIST",
		-102080: "ERR_FEATURE_CONFIG_NOT_EXIST",
		-102081: "ERR_SYNC_SEARCHER_FAIL",
		-102084: "ERR_FEATURE_IDX_NOT_CACHED",
		-102086: "ERR_GET_GROUP_CONF_FAIL",
		-102088: "ERR_PAGE_SYNC_FULL",
		-102091: "ERR_GET_PLAIN_ROUTER_FAIL",
		-102092: "ERR_ADD_JOB",
		-102093: "ERR_GROUP_ASYNC_DELETING",
		-102094: "ERR_GROUP_PACK_INVALID",
		-102095: "ERR_ADD_PAGE_TO_PACK",
		-102103: "ERR_UPDATE_VERSION_FAIL",
		-102104: "ERR_RAPID1VN_GALLERY_INIT",
		-102105: "ERR_RAPID1VN_GALLERY_DELETE",
		-102106: "ERR_RAPID1VN_GALLERY_GET",
		-102107: "ERR_GROUP_VERSION_SYNC_DISORDER",
		-102108: "ERR_GROUP_VERSION_NOT_EXIST",
		-102109: "ERR_PAGE_DIFF_OVER_TOLERANCE",
		-102110: "ERR_ROUTE_INVALID",
		-102111: "ERR_LEVELDB_PUT_FAIL",
		-102112: "ERR_LEVELDB_GET_FAIL",
		-102113: "ERR_GPU_MEMORY_MANAGER_INIT_FAIL",
		-102114: "ERR_NO_ENOUGH_MEM_CAPACITY",
	}
	Error_value = map[string]int32{
		"ERR_FEATURE_SIZE":                 -101003,
		"ERR_GROUP_ID_EMPTY":               -101004,
		"ERR_ENTITY_ID_EMPTY":              -101005,
		"ERR_FEATURE_EMPTY":                -101006,
		"ERR_TOPN_INVALID":                 -101007,
		"ERR_FEATURE_TYPE_INVALID":         -101008,
		"ERR_FEATURE_DIM_INVALID":          -101009,
		"ERR_FEATURE_IDX_INVALID":          -101010,
		"ERR_GROUP_ID_TOO_LONG":            -101011,
		"ERR_FEA_ID_TOO_LONG":              -101012,
		"ERR_FEA_ID_EMPTY":                 -101013,
		"ERR_ENTITY_ID_TOO_LONG":           -101014,
		"ERR_EXTEND_INFO_TOO_LONG":         -101015,
		"ERR_TOPN_TOO_LARGE":               -101016,
		"ERR_GROUP_PAGES_NUM_EXCEED":       -102003,
		"ERR_FEA_ID_NOT_EXISTED":           -102004,
		"ERR_GROUP_SIZE_LIMIT":             -102005,
		"ERR_PAGE_ID_REPEATED":             -102007,
		"ERR_DB_AGENT_RESULT":              -102009,
		"ERR_GET_CONFIG_FAILED":            -102011,
		"ERR_GET_CONFIG_NOT_FOUND":         -102012,
		"ERR_SET_CONFIG_FAILED":            -102013,
		"ERR_SET_CONFIG_VERSION_MISMATCH":  -102014,
		"ERR_DELETE_CONFIG_FAILED":         -102015,
		"ERR_GROUP_EXISTED":                -102016,
		"ERR_ENTITY_ID_NOT_EXISTED":        -102017,
		"ERR_GROUP_NOT_EXISTED":            -102023,
		"ERR_PAGE_NOT_EXISTED":             -102039,
		"ERR_ROUTE_NOT_FOUND":              -102044,
		"ERR_REMOTE_NOT_FOUND":             -102046,
		"ERR_ROUTE_HASH_NODE_EXIST":        -102047,
		"ERR_ROUTE_HASH_NODE_NOT_EXIST":    -102048,
		"ERR_ROUTE_HASH_WORKER_EXIST":      -102049,
		"ERR_ROUTE_HASH_WORKER_NOT_EXIST":  -102050,
		"ERR_ROUTE_HASH_NODE_NOT_EMPTY":    -102051,
		"ERR_GROUP_EMPTY":                  -102052,
		"ERR_PAGE_SYNC_CONFLICT":           -102053,
		"ERR_PAGE_SYNC_DISORDER":           -102054,
		"ERR_DB_INSERT_DUPLICATE":          -102057,
		"ERR_GET_DISTRIBUTED_LOCK":         -102058,
		"ERR_GROUP_FULL":                   -102059,
		"ERR_FREE_PAGE_SIZE":               -102063,
		"ERR_CONFIG_FEATURE_SIZE":          -102067,
		"ERR_RAPID1VN_GALLERY_ADD":         -102068,
		"ERR_RAPID1VN_GALLERY_UPDATE":      -102071,
		"ERR_RAPID1VN_GALLERY_QUERY":       -102072,
		"ERR_DELETE_FEA":                   -102077,
		"ERR_FEATURE_CONFIG_EXIST":         -102079,
		"ERR_FEATURE_CONFIG_NOT_EXIST":     -102080,
		"ERR_SYNC_SEARCHER_FAIL":           -102081,
		"ERR_FEATURE_IDX_NOT_CACHED":       -102084,
		"ERR_GET_GROUP_CONF_FAIL":          -102086,
		"ERR_PAGE_SYNC_FULL":               -102088,
		"ERR_GET_PLAIN_ROUTER_FAIL":        -102091,
		"ERR_ADD_JOB":                      -102092,
		"ERR_GROUP_ASYNC_DELETING":         -102093,
		"ERR_GROUP_PACK_INVALID":           -102094,
		"ERR_ADD_PAGE_TO_PACK":             -102095,
		"ERR_UPDATE_VERSION_FAIL":          -102103,
		"ERR_RAPID1VN_GALLERY_INIT":        -102104,
		"ERR_RAPID1VN_GALLERY_DELETE":      -102105,
		"ERR_RAPID1VN_GALLERY_GET":         -102106,
		"ERR_GROUP_VERSION_SYNC_DISORDER":  -102107,
		"ERR_GROUP_VERSION_NOT_EXIST":      -102108,
		"ERR_PAGE_DIFF_OVER_TOLERANCE":     -102109,
		"ERR_ROUTE_INVALID":                -102110,
		"ERR_LEVELDB_PUT_FAIL":             -102111,
		"ERR_LEVELDB_GET_FAIL":             -102112,
		"ERR_GPU_MEMORY_MANAGER_INIT_FAIL": -102113,
		"ERR_NO_ENOUGH_MEM_CAPACITY":       -102114,
	}
)

func (x Error) Enum() *Error {
	p := new(Error)
	*p = x
	return p
}

func (x Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error) Descriptor() protoreflect.EnumDescriptor {
	return file_zeus_error_proto_enumTypes[0].Descriptor()
}

func (Error) Type() protoreflect.EnumType {
	return &file_zeus_error_proto_enumTypes[0]
}

func (x Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Error) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Error(num)
	return nil
}

// Deprecated: Use Error.Descriptor instead.
func (Error) EnumDescriptor() ([]byte, []int) {
	return file_zeus_error_proto_rawDescGZIP(), []int{0}
}

var File_zeus_error_proto protoreflect.FileDescriptor

var file_zeus_error_proto_rawDesc = []byte{
	0x0a, 0x10, 0x7a, 0x65, 0x75, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x2e, 0x7a, 0x65, 0x75, 0x73, 0x2a, 0xbb,
	0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x10, 0x45, 0x52, 0x52, 0x5f,
	0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0xf5, 0xea, 0xf9,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1f, 0x0a, 0x12, 0x45, 0x52, 0x52, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x49, 0x44, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0xf4, 0xea,
	0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x20, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x5f,
	0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10,
	0xf3, 0xea, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1e, 0x0a, 0x11, 0x45, 0x52,
	0x52, 0x5f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10,
	0xf2, 0xea, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1d, 0x0a, 0x10, 0x45, 0x52,
	0x52, 0x5f, 0x54, 0x4f, 0x50, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xf1,
	0xea, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x25, 0x0a, 0x18, 0x45, 0x52, 0x52,
	0x5f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xf0, 0xea, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
	0x12, 0x24, 0x0a, 0x17, 0x45, 0x52, 0x52, 0x5f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x44, 0x49, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xef, 0xea, 0xf9, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x24, 0x0a, 0x17, 0x45, 0x52, 0x52, 0x5f, 0x46, 0x45,
	0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x49, 0x44, 0x58, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0xee, 0xea, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x22, 0x0a, 0x15,
	0x45, 0x52, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4f,
	0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0xed, 0xea, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
	0x12, 0x20, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x5f, 0x46, 0x45, 0x41, 0x5f, 0x49, 0x44, 0x5f, 0x54,
	0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0xec, 0xea, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x12, 0x1d, 0x0a, 0x10, 0x45, 0x52, 0x52, 0x5f, 0x46, 0x45, 0x41, 0x5f, 0x49, 0x44,
	0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0xeb, 0xea, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x01, 0x12, 0x23, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f,
	0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0xea, 0xea, 0xf9, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x25, 0x0a, 0x18, 0x45, 0x52, 0x52, 0x5f, 0x45, 0x58,
	0x54, 0x45, 0x4e, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f,
	0x4e, 0x47, 0x10, 0xe9, 0xea, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1f, 0x0a,
	0x12, 0x45, 0x52, 0x52, 0x5f, 0x54, 0x4f, 0x50, 0x4e, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x41,
	0x52, 0x47, 0x45, 0x10, 0xe8, 0xea, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x27,
	0x0a, 0x1a, 0x45, 0x52, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x50, 0x41, 0x47, 0x45,
	0x53, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x10, 0x8d, 0xe3, 0xf9,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x23, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x5f, 0x46,
	0x45, 0x41, 0x5f, 0x49, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x45,
	0x44, 0x10, 0x8c, 0xe3, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x21, 0x0a, 0x14,
	0x45, 0x52, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4c,
	0x49, 0x4d, 0x49, 0x54, 0x10, 0x8b, 0xe3, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12,
	0x21, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x52,
	0x45, 0x50, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x89, 0xe3, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x12, 0x20, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x5f, 0x44, 0x42, 0x5f, 0x41, 0x47, 0x45,
	0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x87, 0xe3, 0xf9, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x22, 0x0a, 0x15, 0x45, 0x52, 0x52, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x85, 0xe3,
	0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x25, 0x0a, 0x18, 0x45, 0x52, 0x52, 0x5f,
	0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x84, 0xe3, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12,
	0x22, 0x0a, 0x15, 0x45, 0x52, 0x52, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x83, 0xe3, 0xf9, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x12, 0x2c, 0x0a, 0x1f, 0x45, 0x52, 0x52, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49,
	0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x82, 0xe3, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x01, 0x12, 0x25, 0x0a, 0x18, 0x45, 0x52, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x81, 0xe3,
	0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1e, 0x0a, 0x11, 0x45, 0x52, 0x52, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x45, 0x44, 0x10, 0x80, 0xe3,
	0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x26, 0x0a, 0x19, 0x45, 0x52, 0x52, 0x5f,
	0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x45, 0x44, 0x10, 0xff, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
	0x12, 0x22, 0x0a, 0x15, 0x45, 0x52, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x45, 0x44, 0x10, 0xf9, 0xe2, 0xf9, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x21, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x5f, 0x50, 0x41, 0x47, 0x45,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x45, 0x44, 0x10, 0xe9, 0xe2, 0xf9,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x20, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x5f, 0x52,
	0x4f, 0x55, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xe4,
	0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x21, 0x0a, 0x14, 0x45, 0x52, 0x52,
	0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0xe2, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x26, 0x0a, 0x19,
	0x45, 0x52, 0x52, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x4e,
	0x4f, 0x44, 0x45, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xe1, 0xe2, 0xf9, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x2a, 0x0a, 0x1d, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x4f, 0x55, 0x54,
	0x45, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xe0, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
	0x12, 0x28, 0x0a, 0x1b, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x48, 0x41,
	0x53, 0x48, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10,
	0xdf, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x2c, 0x0a, 0x1f, 0x45, 0x52,
	0x52, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x57, 0x4f, 0x52,
	0x4b, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xde, 0xe2,
	0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x2a, 0x0a, 0x1d, 0x45, 0x52, 0x52, 0x5f,
	0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0xdd, 0xe2, 0xf9, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x1c, 0x0a, 0x0f, 0x45, 0x52, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0xdc, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x12, 0x23, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x53,
	0x59, 0x4e, 0x43, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x10, 0xdb, 0xe2, 0xf9,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x23, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x5f, 0x50,
	0x41, 0x47, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x44, 0x49, 0x53, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x10, 0xda, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x24, 0x0a, 0x17,
	0x45, 0x52, 0x52, 0x5f, 0x44, 0x42, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x5f, 0x44, 0x55,
	0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0xd7, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x12, 0x25, 0x0a, 0x18, 0x45, 0x52, 0x52, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x49,
	0x53, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x44, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xd6,
	0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1b, 0x0a, 0x0e, 0x45, 0x52, 0x52,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0xd5, 0xe2, 0xf9, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1f, 0x0a, 0x12, 0x45, 0x52, 0x52, 0x5f, 0x46, 0x52,
	0x45, 0x45, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0xd1, 0xe2, 0xf9,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x24, 0x0a, 0x17, 0x45, 0x52, 0x52, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x49,
	0x5a, 0x45, 0x10, 0xcd, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x25, 0x0a,
	0x18, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x41, 0x50, 0x49, 0x44, 0x31, 0x56, 0x4e, 0x5f, 0x47, 0x41,
	0x4c, 0x4c, 0x45, 0x52, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x10, 0xcc, 0xe2, 0xf9, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x28, 0x0a, 0x1b, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x41, 0x50, 0x49,
	0x44, 0x31, 0x56, 0x4e, 0x5f, 0x47, 0x41, 0x4c, 0x4c, 0x45, 0x52, 0x59, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x10, 0xc9, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x27,
	0x0a, 0x1a, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x41, 0x50, 0x49, 0x44, 0x31, 0x56, 0x4e, 0x5f, 0x47,
	0x41, 0x4c, 0x4c, 0x45, 0x52, 0x59, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0xc8, 0xe2, 0xf9,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1b, 0x0a, 0x0e, 0x45, 0x52, 0x52, 0x5f, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x46, 0x45, 0x41, 0x10, 0xc3, 0xe2, 0xf9, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x25, 0x0a, 0x18, 0x45, 0x52, 0x52, 0x5f, 0x46, 0x45, 0x41, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x10, 0xc1, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x29, 0x0a, 0x1c, 0x45,
	0x52, 0x52, 0x5f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xc0, 0xe2, 0xf9, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x23, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x5f, 0x53, 0x59,
	0x4e, 0x43, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x10, 0xbf, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x27, 0x0a, 0x1a, 0x45,
	0x52, 0x52, 0x5f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x49, 0x44, 0x58, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x43, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0xbc, 0xe2, 0xf9, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x24, 0x0a, 0x17, 0x45, 0x52, 0x52, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10,
	0xba, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1f, 0x0a, 0x12, 0x45, 0x52,
	0x52, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x46, 0x55, 0x4c, 0x4c,
	0x10, 0xb8, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x26, 0x0a, 0x19, 0x45,
	0x52, 0x52, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x55,
	0x54, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0xb5, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x12, 0x18, 0x0a, 0x0b, 0x45, 0x52, 0x52, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x4a,
	0x4f, 0x42, 0x10, 0xb4, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x25, 0x0a,
	0x18, 0x45, 0x52, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x41, 0x53, 0x59, 0x4e, 0x43,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0xb3, 0xe2, 0xf9, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x23, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xb2,
	0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x21, 0x0a, 0x14, 0x45, 0x52, 0x52,
	0x5f, 0x41, 0x44, 0x44, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x41, 0x43,
	0x4b, 0x10, 0xb1, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x24, 0x0a, 0x17,
	0x45, 0x52, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0xa9, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x12, 0x26, 0x0a, 0x19, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x41, 0x50, 0x49, 0x44, 0x31,
	0x56, 0x4e, 0x5f, 0x47, 0x41, 0x4c, 0x4c, 0x45, 0x52, 0x59, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10,
	0xa8, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x28, 0x0a, 0x1b, 0x45, 0x52,
	0x52, 0x5f, 0x52, 0x41, 0x50, 0x49, 0x44, 0x31, 0x56, 0x4e, 0x5f, 0x47, 0x41, 0x4c, 0x4c, 0x45,
	0x52, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xa7, 0xe2, 0xf9, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x25, 0x0a, 0x18, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x41, 0x50, 0x49,
	0x44, 0x31, 0x56, 0x4e, 0x5f, 0x47, 0x41, 0x4c, 0x4c, 0x45, 0x52, 0x59, 0x5f, 0x47, 0x45, 0x54,
	0x10, 0xa6, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x2c, 0x0a, 0x1f, 0x45,
	0x52, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x44, 0x49, 0x53, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0xa5,
	0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x28, 0x0a, 0x1b, 0x45, 0x52, 0x52,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xa4, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x12, 0x29, 0x0a, 0x1c, 0x45, 0x52, 0x52, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f,
	0x44, 0x49, 0x46, 0x46, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x4c, 0x45, 0x52, 0x41,
	0x4e, 0x43, 0x45, 0x10, 0xa3, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1e,
	0x0a, 0x11, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0xa2, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x21,
	0x0a, 0x14, 0x45, 0x52, 0x52, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x44, 0x42, 0x5f, 0x50, 0x55,
	0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0xa1, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x01, 0x12, 0x21, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x44, 0x42,
	0x5f, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0xa0, 0xe2, 0xf9, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x2d, 0x0a, 0x20, 0x45, 0x52, 0x52, 0x5f, 0x47, 0x50, 0x55, 0x5f,
	0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x49,
	0x4e, 0x49, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x9f, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x12, 0x27, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x5f, 0x4e, 0x4f, 0x5f, 0x45, 0x4e,
	0x4f, 0x55, 0x47, 0x48, 0x5f, 0x4d, 0x45, 0x4d, 0x5f, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54,
	0x59, 0x10, 0x9e, 0xe2, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x42, 0x10, 0x5a, 0x0e,
	0x61, 0x70, 0x69, 0x2f, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x5f, 0x7a, 0x65, 0x75, 0x73,
}

var (
	file_zeus_error_proto_rawDescOnce sync.Once
	file_zeus_error_proto_rawDescData = file_zeus_error_proto_rawDesc
)

func file_zeus_error_proto_rawDescGZIP() []byte {
	file_zeus_error_proto_rawDescOnce.Do(func() {
		file_zeus_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_zeus_error_proto_rawDescData)
	})
	return file_zeus_error_proto_rawDescData
}

var file_zeus_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_zeus_error_proto_goTypes = []interface{}{
	(Error)(0), // 0: youtu.zeus.Error
}
var file_zeus_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_zeus_error_proto_init() }
func file_zeus_error_proto_init() {
	if File_zeus_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zeus_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zeus_error_proto_goTypes,
		DependencyIndexes: file_zeus_error_proto_depIdxs,
		EnumInfos:         file_zeus_error_proto_enumTypes,
	}.Build()
	File_zeus_error_proto = out.File
	file_zeus_error_proto_rawDesc = nil
	file_zeus_error_proto_goTypes = nil
	file_zeus_error_proto_depIdxs = nil
}
